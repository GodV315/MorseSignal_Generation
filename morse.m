function [morsecode] = morse(Fs,time_dit,Fc,text,jitter)
    global Fs_global;
    global time_dit_global;
    global Fc_global;
    global jitter_global;
    Fs_global = Fs;
    time_dit_global = time_dit;
    Fc_global = Fc;
    jitter_global = jitter;
%     t_dit = 0:1/Fs:time_dit-1/Fs;
%     t_dah = 0:1/Fs:3*time_dit-1/Fs;
%     Dit = exp(j*2*pi*Fc*t_dit);
%     ssp = zeros([1 length(Dit)]);
%     Dah = exp(j*2*pi*Fc*t_dah);
    ssp = zeros([1 round(time_dit*Fs)]);
    
    Codebook = struct(...
    'A', [Dit,ssp,Dah],...
    'B', [Dah,ssp,Dit,ssp,Dit,ssp,Dit],...
    'C', [Dah,ssp,Dit,ssp,Dah,ssp,Dit],...
    'D', [Dah,ssp,Dit,ssp,Dit],...
    'E', [Dit],...
    'F', [Dit,ssp,Dit,ssp,Dah,ssp,Dit],...
    'G', [Dah,ssp,Dah,ssp,Dit],...
    'H', [Dit,ssp,Dit,ssp,Dit,ssp,Dit],...
    'I', [Dit,ssp,Dit],...
    'J', [Dit,ssp,Dah,ssp,Dah,ssp,Dah],...
    'K', [Dah,ssp,Dit,ssp,Dah],...
    'L', [Dit,ssp,Dah,ssp,Dit,ssp,Dit],...
    'M', [Dah,ssp,Dah],...
    'N', [Dah,ssp,Dit],...
    'O', [Dah,ssp,Dah,ssp,Dah],...
    'P', [Dit,ssp,Dah,ssp,Dah,ssp,Dit],...
    'Q', [Dah,ssp,Dah,ssp,Dit,ssp,Dah],...
    'R', [Dit,ssp,Dah,ssp,Dit],...
    'S', [Dit,ssp,Dit,ssp,Dit],...
    'T', [Dah],...
    'U', [Dit,ssp,Dit,ssp,Dah],...
    'V', [Dit,ssp,Dit,ssp,Dit,ssp,Dah],...
    'W', [Dit,ssp,Dah,ssp,Dah],...
    'X', [Dah,ssp,Dit,ssp,Dit,ssp,Dah],...
    'Y', [Dah,ssp,Dit,ssp,Dah,ssp,Dah],...
    'Z', [Dah,ssp,Dah,ssp,Dit,ssp,Dit]);

    morsecode = [];
    for i = 1:length(text)
        if i < length(text)
            morsecode = [morsecode,Codebook.(text(i)),ssp,ssp,ssp];
        else
            morsecode = [morsecode,Codebook.(text(i))];  % 最后一个字符后面不加空白
        end
    end
end

function [Dit] = Dit()
    global Fs_global;
    global time_dit_global;
    global Fc_global;
    global jitter_global;
    t_dit = 0: 1/Fs_global: time_dit_global*unifrnd(0.7,1.5,1,1)-1/Fs_global;
    Dit = exp(j*2*pi*(Fc_global+jitter_global*t_dit).*t_dit);
end

function [Dah] = Dah()
    global Fs_global;
    global time_dit_global;
    global Fc_global;
    global jitter_global;
    t_dah = 0: 1/Fs_global: 3*time_dit_global*unifrnd(0.7,1.5,1,1)-1/Fs_global;
    Dah = exp(j*2*pi*(Fc_global+jitter_global*t_dah).*t_dah);
end 